on: [push, pull_request]

name: Test and Lint

jobs:
  test:
    name: Test
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        target: [x86_64-unknown-linux-musl]
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          default: true
      - run: sudo apt-get install -y musl-tools
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --all-features --target=${{ matrix.target }}
      - uses: actions/upload-artifact@v2
        with:
          name: musl-executable
          path: ./target/x86_64-unknown-linux-musl/release/magicpak
        if: matrix.target == 'x86_64-unknown-linux-musl'
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --release --all-features --target=${{ matrix.target }}
  fmt:
    name: Rustfmt
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - run: rustup component add rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
  clippy:
    name: Clippy
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - run: rustup component add clippy
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings
  test_examples:
    name: Test examples
    runs-on: ubuntu-18.04
    needs: test
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: musl-executable
      - name: Build docker images
        run: IMAGE_PREFIX=test-magicpak/ PUSH_IMAGES=false ./dockerfile/build.sh ./magicpak
      - name: Build examples
        run: |
          for example in ./example/*; do
            sed -e 's/FROM magicpak/FROM test-magicpak/' -i "$example/Dockerfile"
            grep 'FROM magicpak' "$example/Dockerfile" && exit 1 || true
            docker build "$example"
          done
